<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Using closures in event listeners</title>
    <style>
        html, body, #map-canvas {
            height: 100%;
            margin: 0px;
            padding: 0px
        }

    </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"></script>
    <script>
        totalMarkers = 0;
        function initialize() {
            var mapOptions = {
                zoom: 4,
                center: new google.maps.LatLng(-25.363882,131.044922),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var map = new google.maps.Map(document.getElementById('map-canvas'),
                    mapOptions);

            var input = document.getElementById('target');
            var searchBox = new google.maps.places.SearchBox(input);

            google.maps.event.addListener(map, 'click', function(e) {
                if (totalMarkers >= 2) {
                    return;
                }

                totalMarkers++;
                placeMarker(e.latLng, map);
            });

            google.maps.event.addListener(searchBox, 'places_changed', function() {
                var places = searchBox.getPlaces();

                // For each place, get the icon, place name, and location.
                var bounds = new google.maps.LatLngBounds();
                for (var i = 0, place; place = places[i]; i++) {
                    var image = {
                        url: place.icon,
                        size: new google.maps.Size(71, 71),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(17, 34),
                        scaledSize: new google.maps.Size(25, 25)
                    };

                    bounds.extend(place.geometry.location);
                }

                map.fitBounds(bounds);
            });
        }

        function placeMarker(position, map) {
            var marker = new google.maps.Marker({
                draggable: true,
                position: position,
                map: map
            });
//            map.panTo(position);
            google.maps.event.addListener(marker, 'mouseup', function(e) {
                console.log(e);
            });
        }

        google.maps.event.addDomListener(window, 'load', initialize);

    </script>
</head>
<body>
    <input id="target" type="text" />
    <div id="map-canvas"></div>
</body>
</html>